#!/bin/bash
#
# Copyright (C) 2021, 2022 Collabora Limited
# Author: Michal Galka <michal.galka@collabora.com>
# Author: Guillaume Tucker <guillaume.tucker@collabora.com>
#
# This module is free software; you can redistribute it and/or modify it under
# the terms of the GNU Lesser General Public License as published by the Free
# Software Foundation; either version 2.1 of the License, or (at your option)
# any later version.
#
# This library is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more
# details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this library; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA

set -xe

MODULES_URL="$1"
IMAGE_MOUNTPOINT="${2:-/root/chromeos}"

MOD_PART_UUID="566f7961-6765-7220-746f-20756e697665"

check_filesystem()
{
    DEVICE="$1"

    # Check and try to repair the rootfs:
    #  * first, try an automated repair (-p)
    #  * if the fs is corrupt and can't be automatically repaired,
    #    simulate a "manual" check accepting all suggested fixes (-y)
    #  * re-simulate a manual run once again to ensure no error
    #    has been left behind

    if ! fsck -fp $DEVICE; then
        # `fsck -y` errors out when the filesystem is repaired
        if ! fsck -y $DEVICE; then
            fsck -y $DEVICE
        fi
    fi
}

install_modules()
{
    local modules_url="$1"
    local image_mountpoint="$2"

    local mount_dir=$(basename "$image_mountpoint")
    local root_path=$(dirname "$image_mountpoint")
    # $modules_url may contain GET parameters, let's get rid of those
    local modules_tarball=$(basename "$modules_url" | sed 's/?.*//')

    echo "Checking modules partition..."

    BLK_DEV="$(realpath /dev/disk/by-partuuid/$MOD_PART_UUID || lava-test-raise 'cros-partition-corrupt')"
    test -b $BLK_DEV && check_filesystem $BLK_DEV || lava-test-raise 'cros-partition-corrupt'

    echo "Downloading modules from $modules_url as $modules_tarball..."
    mkdir -p "$image_mountpoint"
    cd "$root_path"
    wget -O "$modules_tarball" "$modules_url"
    mount PARTUUID=$MOD_PART_UUID "$mount_dir" || lava-test-raise "cros-partition-corrupt"

    echo "Installing modules..."
    cd "$mount_dir"
    ls -l lib/modules
    rm -rf lib/modules
    tar \
        --no-same-owner \
        --no-same-permissions \
        --no-xattrs \
        --no-selinux \
        --no-acls \
        -xf \
        "$root_path/$modules_tarball"
    ls -l lib/modules
    cd "$root_path"
    umount "$mount_dir"
    sync
}

if [ -z "$MODULES_URL" ]; then
    echo "Missing modules URL"
    echo "Usage: install-modules MODULES_URL IMAGE_MOUNTPOINT"
    exit 1
fi

install_modules "$MODULES_URL" "$IMAGE_MOUNTPOINT"

exit 0
