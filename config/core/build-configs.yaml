# See the KernelCI wiki page regarding the format of this file:
# https://github.com/kernelci/kernelci-doc/wiki/Build-configurations


trees:

  agross:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/qcom/linux.git"

  alex:
    url: "https://git.linaro.org/people/alex.bennee/linux.git"

  amlogic:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/amlogic/linux.git"

  ardb:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/ardb/linux.git"

  arm64:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux.git"

  arnd:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/arnd/playground.git"

  broonie-misc:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/broonie/misc.git"

  broonie-regmap:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/broonie/regmap.git"

  broonie-regulator:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/broonie/regulator.git"

  broonie-sound:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound.git"

  broonie-spi:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/broonie/spi.git"

  chrome-platform:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/chrome-platform/linux.git"

  clk:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/clk/linux.git"

  efi:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/efi/efi.git"

  evalenti:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/evalenti/linux-soc-thermal.git"

  gtucker:
    url: 'https://gitlab.collabora.com/gtucker/linux.git'

  khilman:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/khilman/linux.git"

  krzysztof:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/krzk/linux.git"

  kselftest:
    url: 'https://git.kernel.org/pub/scm/linux/kernel/git/shuah/linux-kselftest.git'

  lee:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/lee/linux.git"

  linusw:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-gpio.git/"

  mainline:
    url: 'https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git'

  media:
    url: "https://git.linuxtv.org/media_tree.git"

  net-next:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/netdev/net-next.git"

  next:
    url: 'https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git'

  omap:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/tmlind/linux-omap.git"

  peterz:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/peterz/queue.git"

  pm:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm.git"

  pmwg:
    url: "https://git.linaro.org/power/linux.git"

  qcom-lt:
    url: "https://git.linaro.org/landing-teams/working/qualcomm/kernel.git"

  renesas:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/geert/renesas-devel.git"

  rmk:
    url: "git://git.armlinux.org.uk/~rmk/linux-arm.git"

  robh:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/robh/linux.git"

  rppt:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/rppt/memblock.git/"

  rt-stable:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/rt/linux-stable-rt.git"

  samsung:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/kgene/linux-samsung.git"

  soc:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/soc/soc.git"

  tegra:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/tegra/linux.git"

  thermal:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/thermal/linux.git"

  tip:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git"

  ulfh:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/ulfh/mmc.git"

  vireshk:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/vireshk/linux.git"


fragments:

  amdgpu:
    path: "kernel/configs/amdgpu.config"
    configs:
      - 'CONFIG_DRM_AMDGPU=y'
      - 'CONFIG_DRM_AMDGPU_USERPTR=y'

  arm64-chromebook:
    path: "kernel/configs/arm64-chromebook.config"
    configs:
      - 'CONFIG_REGULATOR_DA9211=y'
      - 'CONFIG_ARM_MEDIATEK_CPUFREQ=y'
      - 'CONFIG_RTC_DRV_MT6397=y'

  crypto:
    path: "kernel/configs/crypto.config"
    configs:
      - 'CONFIG_CRYPTO_CHACHA20POLY1305=y'
      - 'CONFIG_CRYPTO_CHACHA20=y'
      - 'CONFIG_CRYPTO_POLY1305=y'
      - 'CONFIG_CRYPTO_AEAD=y'
      - 'CONFIG_CRYPTO_MANAGER=y'
      - 'CONFIG_CRYPTO_LIB_CHACHA_GENERIC=y'
      - 'CONFIG_CRYPTO_SKCIPHER=y'
      - 'CONFIG_CRYPTO_HASH=y'
      - 'CONFIG_CRYPTO_LIB_POLY1305_GENERIC=y'
      - 'CONFIG_CRYPTO_AEAD2=y'
      - 'CONFIG_CRYPTO_ALGAPI=y'
      - 'CONFIG_CRYPTO_MANAGER2=y'
      - 'CONFIG_CRYPTO_SKCIPHER2=y'
      - 'CONFIG_CRYPTO_HASH2=y'
      - 'CONFIG_CRYPTO_ALGAPI2=y'
      - 'CONFIG_CRYPTO_NULL2=y'
      - 'CONFIG_CRYPTO_RNG2=y'
      - 'CONFIG_CRYPTO_AKCIPHER2=y'
      - 'CONFIG_CRYPTO_KPP2=y'
      - 'CONFIG_CRYPTO_ACOMP2=y'
      - 'CONFIG_SGL_ALLOC=y'
      - 'CONFIG_CRYPTO_VMAC=y'
      - 'CONFIG_CRYPTO_PCRYPT=y'
      - 'CONFIG_PADATA=y'
      - 'CONFIG_CRYPTO_HMAC=y'
      - 'CONFIG_CRYPTO_AES=y'
      - 'CONFIG_CRYPTO_LIB_AES=y'
      - 'CONFIG_CRYPTO_SHA256=y'
      - 'CONFIG_CRYPTO_CBC=y'
      - 'CONFIG_CRYPTO_MD5=y'
      - 'CONFIG_CRYPTO_SHA1=y'
      - 'CONFIG_CRYPTO_AUTHENC=y'
      - 'CONFIG_CRYPTO_USER=y'
      - 'CONFIG_CRYPTO_USER_API_HASH=y'
      - 'CONFIG_CRYPTO_USER_API_SKCIPHER=y'
      - 'CONFIG_CRYPTO_USER_API_RNG=y'
      - 'CONFIG_CRYPTO_USER_API_AEAD=y'
      - 'CONFIG_CRYPTO_SHA3=y'
      - 'CONFIG_CRYPTO_LIB_CHACHA20POLY1305=y'
      - 'CONFIG_CRYPTO_DEV_FSL_CAAM_CRYPTO_API=y'
      - 'CONFIG_CRYPTO_DEV_FSL_CAAM_CRYPTO_API_DESC=y'
      - 'CONFIG_CRYPTO_AEAD=y'
      - 'CONFIG_CRYPTO_AUTHENC=y'
      - 'CONFIG_CRYPTO_SKCIPHER=y'
      - 'CONFIG_CRYPTO_LIB_DES=y'
      - 'CONFIG_CRYPTO_XTS=y'
      - 'CONFIG_CRYPTO_DEV_FSL_CAAM_CRYPTO_API_QI=y'
      - 'CONFIG_CRYPTO_DEV_FSL_CAAM_CRYPTO_API_DESC=y'
      - 'CONFIG_CRYPTO_DES=y'
      - 'CONFIG_CRYPTO_ECB=y'

  debug:
    path: "kernel/configs/debug.config"

  ima:
    path: "kernel/configs/ima.config"
    configs:
      - 'CONFIG_INTEGRITY=y'
      - 'CONFIG_IMA=y'
      - 'CONFIG_IMA_READ_POLICY=y'

  kselftest:
    path: "kernel/configs/kselftest.config"

  preempt_rt:
    path: "kernel/configs/preempt_rt.config"
    configs:
      - 'CONFIG_EXPERT=y'
      - 'CONFIG_PREEMPT_RT=y'
      - 'CONFIG_PREEMPT_RT_FULL=y' # <= v4.19

  tinyconfig:
    path: "kernel/configs/tiny.config"
    defconfig: 'tinyconfig'

  virtualvideo:
    path: "kernel/configs/virtualvideo.config"
    configs:
      - 'CONFIG_FB=y'
      - 'CONFIG_MEDIA_SUPPORT=y'
      - 'CONFIG_MEDIA_CAMERA_SUPPORT=y'
      - 'CONFIG_MEDIA_TEST_SUPPORT=y'
      - 'CONFIG_VIDEO_DEV=y'
      - 'CONFIG_VIDEO_V4L2=y'
      - 'CONFIG_V4L_TEST_DRIVERS=y'
      - 'CONFIG_VIDEO_VIVID=y'
      - 'CONFIG_VIDEO_VIVID_MAX_DEVS=64'

  x86-chromebook:
    path: "kernel/configs/x86-chromebook.config"
    configs:
      - 'CONFIG_SERIAL_8250_DW=y'
      - 'CONFIG_X86_AMD_PLATFORM_DEVICE=y'
      - 'CONFIG_MFD_INTEL_LPSS_PCI=y'
      - 'CONFIG_USB_GADGET=y'
      - 'CONFIG_USB_ETH=y'
      - 'CONFIG_USB_RTL8152=y'
      - 'CONFIG_MMC=y'
      - 'CONFIG_MMC_SDHCI=y'
      - 'CONFIG_MMC_SDHCI_PCI=y'
      - 'CONFIG_MMC_SDHCI_ACPI=y'
      - 'CONFIG_CHROME_PLATFORMS=y'
      - 'CONFIG_CHROMEOS_LAPTOP=y'
      - 'CONFIG_CHROMEOS_TBMC=y'
      - 'CONFIG_CROS_EC=y'
      - 'CONFIG_CROS_EC_LPC=y'
      - 'CONFIG_CROS_EC_I2C=y'
      - 'CONFIG_IIO=m'
      - 'CONFIG_IIO_CROS_EC_SENSORS_CORE=m'
      - 'CONFIG_IIO_CROS_EC_SENSORS=m'
      - 'CONFIG_MFD_CROS_EC_DEV=m'
      - 'CONFIG_I2C_DESIGNWARE_PLATFORM=y'
      - 'CONFIG_TCG_TPM=y'
      - 'CONFIG_TCG_TIS=y'
      - 'CONFIG_TCG_TIS_SPI=y'
      - 'CONFIG_TCG_TIS_SPI_CR50=y'
      - 'CONFIG_TCG_TIS_I2C_CR50=y'
      - 'CONFIG_SPI=y'
      - 'CONFIG_SPI_PXA2XX=y'

  x86_kvm_guest:
    path: "kernel/configs/kvm_guest.config"


build_environments:

  gcc-10:
    cc: gcc
    cc_version: 10
    arch_params: &gcc_arch_params
      arc: &arc_params
        cross_compile: 'arc-elf32-'
      arm: &arm_params
        cross_compile: 'arm-linux-gnueabihf-'
      arm64: &arm64_params
        cross_compile: 'aarch64-linux-gnu-'
        cross_compile_compat: 'arm-linux-gnueabihf-'
      i386: &i386_params
        name: 'x86'
      mips: &mips_params
        cross_compile: 'mips-linux-gnu-'
      x86_64: &x86_64_params
        name: 'x86'
      riscv: &riscv_params
        name: 'riscv64'
        cross_compile: 'riscv64-linux-gnu-'

  clang-10:
    cc: clang
    cc_version: 10
    arch_params: &clang_10_arch_params
      arm:
        <<: *arm_params
        name:
      arm64:
        <<: *arm64_params
        name:
      i386:
        <<: *i386_params
        name:
      mips:
        <<: *mips_params
        name:
      x86_64:
        <<: *x86_64_params
        name:

  clang-11:
    cc: clang
    cc_version: 11
    arch_params: *clang_10_arch_params

  clang-12:
    cc: clang
    cc_version: 12
    arch_params: &clang_12_arch_params
      <<: *clang_10_arch_params
      riscv:
        <<: *riscv_params
        name:
        opts:
          LLVM_IAS: '1'
          LD: 'riscv64-linux-gnu-ld'

  clang-13:
    cc: clang
    cc_version: 13
    arch_params: *clang_12_arch_params

  clang-14:
    cc: clang
    cc_version: 14
    arch_params:
      <<: *clang_12_arch_params

  clang-15:
    cc: clang
    cc_version: 15
    arch_params:
      <<: *clang_12_arch_params

# Default config with full build coverage
build_configs_defaults:
  variants:
    gcc-10: &default_gcc-10
      build_environment: gcc-10

      fragments: &default_fragments
        - 'debug'
        - 'kselftest'
        - 'tinyconfig'

      architectures: &default_architectures

        arc: &arc_arch
          base_defconfig: 'haps_hs_smp_defconfig'
          extra_configs: ['allnoconfig']
          filters: &arc_default_filters
            # remove any non-ARCv2 defconfigs since we only have ARCv2 toolchain
            - blocklist:
                defconfig:
                  - 'axs101_defconfig'
                  - 'nps_defconfig'
                  - 'nsim_700_defconfig'
                  - 'nsimosci_defconfig'
                  - 'tb10x_defconfig'

        arm: &arm_arch
          base_defconfig: 'multi_v7_defconfig'
          extra_configs:
            - 'allmodconfig'
            - 'allnoconfig'
            - 'multi_v7_defconfig+CONFIG_CPU_BIG_ENDIAN=y'
            - 'multi_v7_defconfig+CONFIG_SMP=n'
            - 'multi_v7_defconfig+CONFIG_EFI=y+CONFIG_ARM_LPAE=y'
            - 'multi_v7_defconfig+CONFIG_THUMB2_KERNEL=y'
          fragments: [crypto, ima]

        arm64: &arm64_arch
          extra_configs:
            - 'allmodconfig'
            - 'allnoconfig'
            - 'defconfig+CONFIG_CPU_BIG_ENDIAN=y'
            - 'defconfig+CONFIG_RANDOMIZE_BASE=y'
            - 'defconfig+arm64-chromebook+kselftest'
          fragments: [arm64-chromebook, crypto, ima]

        i386: &i386_arch
          base_defconfig: 'i386_defconfig'
          extra_configs: ['allnoconfig']

        mips: &mips_arch
          base_defconfig: '32r2el_defconfig'
          extra_configs: ['allnoconfig']
          filters: &mips_default_filters
            - blocklist: {defconfig: ['generic_defconfig']}

        riscv: &riscv_arch
          extra_configs: ['allnoconfig']
          filters:
            - blocklist: &riscv_kernel_filter
                kernel: ['v3.', 'v4.4', 'v4.9', 'v4.14']

        x86_64: &x86_64_arch
          base_defconfig: 'x86_64_defconfig'
          extra_configs:
            - 'allmodconfig'
            - 'allnoconfig'
            - 'x86_64_defconfig+x86-chromebook+kselftest'
            - 'x86_64_defconfig+x86-chromebook+amdgpu'
          fragments: [amdgpu, crypto, ima, x86_kvm_guest, x86-chromebook]

  reference:
    tree: mainline
    branch: 'master'


# Set of configs to build with Clang
arch_clang_configs: &arch_clang_configs
  arm64:
    extra_configs:
      - 'allmodconfig'
      - 'allnoconfig'
      - 'defconfig+CONFIG_ARM64_64K_PAGES=y'
  arm:
    base_defconfig: 'multi_v7_defconfig'
    filters:
      - regex: {
          defconfig: '(?:aspeed_g5_def|multi_v5_def|multi_v7_def|allmod|allno)config',
          }
    extra_configs:
      - 'aspeed_g5_defconfig'
      - 'multi_v5_defconfig'
      - 'allmodconfig'
      - 'allnoconfig'
  x86_64:
    base_defconfig: 'x86_64_defconfig'
    extra_configs:
      - 'allmodconfig'
      - 'allnoconfig'
  i386:
    base_defconfig: 'i386_defconfig'
    extra_configs:
      - 'allmodconfig'
      - 'allnoconfig'


# Minimum architecture defconfigs
arch_defconfigs: &arch_defconfigs
  arc: &arc_defconfig
    base_defconfig: 'haps_hs_smp_defconfig'
    filters:
      - regex: { defconfig: 'haps_hs_smp_defconfig' }
  arm: &arm_defconfig
    base_defconfig: 'multi_v7_defconfig'
    filters:
      - regex: { defconfig: 'multi_v7_defconfig' }
  arm64: &arm64_defconfig
    base_defconfig: 'defconfig'
    filters:
      - regex: { defconfig: 'defconfig' }
  i386: &i386_defconfig
    base_defconfig: 'i386_defconfig'
    filters:
      - regex: { defconfig: 'i386_defconfig' }
  mips: &mips_defconfig
    base_defconfig: '32r2el_defconfig'
    filters:
      - regex: { defconfig: '32r2el_defconfig' }
  riscv: &riscv_defconfig
    base_defconfig: 'defconfig'
    filters:
      - regex: { defconfig: 'defconfig' }
      - blocklist: *riscv_kernel_filter
  x86_64: &x86_64_defconfig
    base_defconfig: 'x86_64_defconfig'
    filters:
      - regex: { defconfig: 'x86_64_defconfig' }


# Small subset of builds, only defconfigs
minimal_variants: &minimal_variants
  gcc-10: &gcc_10_minimal
    build_environment: gcc-10
    architectures: *arch_defconfigs

# Medium subset of builds
medium_variants: &medium_variants
  gcc-10:
    build_environment: gcc-10
    architectures:
      x86_64: *x86_64_arch
      i386: *i386_arch
      arm64: *arm64_arch
      arm: *arm_arch


preempt_rt_variants: &preempt_rt_variants
  gcc-10:
    build_environment: gcc-10
    fragments: [preempt_rt]
    architectures:
      arm:
        <<: *arm_defconfig
        extra_configs:
          - 'multi_v7_defconfig+preempt_rt'
      arm64:
        <<: *arm64_defconfig
        fragments: [arm64-chromebook]
        extra_configs:
          - 'defconfig+preempt_rt'
          - 'defconfig+preempt_rt+arm64-chromebook'
      x86_64:
        <<: *x86_64_defconfig
        fragments: [x86-chromebook]
        extra_configs:
          - 'x86_64_defconfig+preempt_rt'
          - 'x86_64_defconfig+preempt_rt+x86-chromebook'


build_configs:

  agross:
    tree: agross
    branch: 'ci-next'

  alex:
    tree: alex
    branch: 'kernel-ci'

  amlogic:
    tree: amlogic
    branch: 'for-next'

  amlogic_integ:
    tree: amlogic
    branch: 'integ'

  ardb:
    tree: ardb
    branch: 'for-kernelci'

  arm64:
    tree: arm64
    branch: 'for-kernelci'
    variants:
      gcc-10:
        build_environment: gcc-10
        architectures:
          arm64:
            base_defconfig: 'defconfig'
            extra_configs:
              - 'allmodconfig'
              - 'allnoconfig'

  arnd:
    tree: arnd
    branch: 'to-build'

  broonie-misc:
    tree: broonie-misc
    branch: 'for-kernelci'
    variants:
      gcc-10:
        build_environment: gcc-10
        architectures:
          arm: {base_defconfig: 'multi_v7_defconfig'}
          arm64:
          x86_64: {base_defconfig: 'x86_64_defconfig'}

  broonie-regmap:
    tree: broonie-regmap
    branch: 'for-next'

  broonie-regmap-fixes:
    tree: broonie-regmap
    branch: 'for-linus'

  broonie-regulator:
    tree: broonie-regulator
    branch: 'for-next'

  broonie-regulator-fixes:
    tree: broonie-regulator
    branch: 'for-linus'

  broonie-sound:
    tree: broonie-sound
    branch: 'for-next'

  broonie-sound-fixes:
    tree: broonie-sound
    branch: 'for-next-linus'

  broonie-spi:
    tree: broonie-spi
    branch: 'for-next'

  broonie-spi-fixes:
    tree: broonie-spi
    branch: 'for-linus'

  chrome-platform:
    tree: chrome-platform
    branch: 'for-kernelci'
    variants:
      gcc-10:
        build_environment: gcc-10
        architectures:
          arm: *arm_defconfig
          arm64:
            <<: *arm64_defconfig
            fragments: [arm64-chromebook]
          x86_64:
            <<: *x86_64_defconfig
            fragments: [x86-chromebook]

  clk:
    tree: clk
    branch: 'clk-next'

  efi:
    tree: efi
    branch: 'next'
    variants:
      gcc-10:
        build_environment: gcc-10
        architectures:
          arm: *arm_defconfig
          arm64: *arm64_defconfig
          i386: *i386_defconfig
          x86_64: *x86_64_defconfig

  efi_urgent:
    tree: efi
    branch: 'urgent'
    variants:
      gcc-10:
        build_environment: gcc-10
        architectures:
          arm: *arm_defconfig
          arm64: *arm64_defconfig
          i386: *i386_defconfig
          x86_64: *x86_64_defconfig

  evalenti:
    tree: evalenti
    branch: 'for-kernelci'

  khilman:
    tree: khilman
    branch: 'to-build'

  krzysztof:
    tree: krzysztof
    branch: 'for-next'

  kselftest_fixes: &kselftest-tree
    tree: kselftest
    branch: 'fixes'
    variants:
      gcc-10:
        build_environment: gcc-10
        fragments: [kselftest]
        architectures:
          arm:
            <<: *arm_defconfig
            filters: &kselftest-only
              - regex: { defconfig: '.*kselftest.*' }
          arm64: &arm64-kselftest
            <<: *arm64_defconfig
            fragments: [arm64-chromebook]
            extra_configs: ['defconfig+kselftest+arm64-chromebook']
            filters: *kselftest-only
          i386:
            <<: *i386_defconfig
            filters: *kselftest-only
          x86_64: &x86_64-kselftest
            <<: *x86_64_defconfig
            fragments: [x86-chromebook]
            extra_configs: ['x86_64+defconfig+kselftest+x86-chromebook']
            filters: *kselftest-only
      clang-14:
        build_environment: clang-14
        fragments: [kselftest]
        architectures:
          arm64: *arm64-kselftest
          x86_64: *x86_64-kselftest

  kselftest_next:
    <<: *kselftest-tree
    branch: 'next'

  lee_android_3.18:
    tree: lee
    branch: 'android-3.18-preview'
    variants: *medium_variants

  linusw_devel:
    tree: linusw
    branch: 'devel'
    variants: *minimal_variants

  linusw_fixes:
    tree: linusw
    branch: 'fixes'
    variants: *minimal_variants

  linusw_for-next:
    tree: linusw
    branch: 'for-next'
    variants: *minimal_variants

  mainline:
    tree: mainline
    branch: 'master'
    variants:
      gcc-10: *default_gcc-10
      # Minimum version
      clang-10:
        build_environment: clang-10
        architectures: *arch_clang_configs
      # Latest stable release
      clang-13:
        build_environment: clang-13
        architectures: *arch_clang_configs
      chromeos-configs: &chromeos_configs
        build_environment: clang-13
        architectures:
            arm:
              base_defconfig: 'cros://chromeos-5.10/armel/chromiumos-arm.flavour.config'
              extra_configs:
                - 'cros://chromeos-5.10/armel/chromiumos-rockchip.flavour.config'
            arm64:
              base_defconfig: 'cros://chromeos-5.10/arm64/chromiumos-arm64.flavour.config'
              extra_configs:
                - 'cros://chromeos-5.10/arm64/chromiumos-mediatek.flavour.config'
                - 'cros://chromeos-5.10/arm64/chromiumos-qualcomm.flavour.config'
                - 'cros://chromeos-5.10/arm64/chromiumos-rockchip64.flavour.config'
            x86_64:
              base_defconfig: 'cros://chromeos-5.10/x86_64/chromiumos-x86_64.flavour.config'
              extra_configs:
                - 'cros://chromeos-5.10/x86_64/chromeos-amd-stoneyridge.flavour.config'
                - 'cros://chromeos-5.10/x86_64/chromeos-intel-denverton.flavour.config'
                - 'cros://chromeos-5.10/x86_64/chromeos-intel-pineview.flavour.config'


  media:
    tree: media
    branch: 'master'
    variants:
      gcc-10:
        build_environment: gcc-10
        fragments: [virtualvideo]
        architectures:
          i386: *i386_arch
          x86_64: *x86_64_arch
          arm: *arm_arch
          arm64: *arm64_arch

  net-next:
    tree: net-next
    branch: 'master'

  next:
    tree: next
    branch: 'master'
    variants:
      gcc-10:
        build_environment: gcc-10
        fragments: *default_fragments
        architectures:
          i386: *i386_arch
          x86_64: *x86_64_arch
          mips: *mips_arch
          riscv: *riscv_arch
          arc: *arc_arch
          arm64:
            <<: *arm64_arch
            extra_configs:
              - 'allmodconfig'
              - 'allnoconfig'
              - 'defconfig+CONFIG_ARM64_16K_PAGES=y'
              - 'defconfig+CONFIG_ARM64_64K_PAGES=y'
              - 'defconfig+CONFIG_CPU_BIG_ENDIAN=y'
              - 'defconfig+CONFIG_RANDOMIZE_BASE=y'
              - 'defconfig+arm64-chromebook+kselftest'
          arm:
            base_defconfig: 'multi_v7_defconfig'
            extra_configs:
              - 'multi_v7_defconfig+CONFIG_CPU_BIG_ENDIAN=y'
              - 'multi_v7_defconfig+CONFIG_SMP=n'
              - 'multi_v7_defconfig+CONFIG_EFI=y+CONFIG_ARM_LPAE=y'
              - 'multi_v7_defconfig+CONFIG_THUMB2_KERNEL=y'
              - 'allnoconfig'
              - 'allmodconfig'

      # Latest clang release
      clang-14:
        build_environment: clang-14
        architectures:
          <<: *arch_clang_configs
          riscv:
            extra_configs: &riscv_clang_configs
              - 'allnoconfig'
              - 'defconfig+CONFIG_EFI=n'
            filters:
              - passlist:
                  defconfig: *riscv_clang_configs

      # ChromeOS configs
      chromeos_configs:
        <<: *chromeos_configs

  next_pending-fixes:
    tree: next
    branch: 'pending-fixes'

  omap:
    tree: omap
    branch: 'for-next'

  peterz:
    tree: peterz
    branch: 'kernelci'
    variants: *minimal_variants

  pm:
    tree: pm
    branch: 'testing'
    variants: *minimal_variants

  pmwg:
    tree: pmwg
    branch: 'integ'

  qcom-lt:
    tree: qcom-lt
    branch: 'integration-linux-qcomlt'

  qcom-lt_experimental:
    tree: qcom-lt
    branch: 'integration-experimental'

  renesas:
    tree: renesas
    branch: 'master'

  renesas_next:
    tree: renesas
    branch: 'next'

  rmk_for-next:
    tree: rmk
    branch: 'for-next'

  rmk_to-build:
    tree: rmk
    branch: 'to-build'

  robh:
    tree: robh
    branch: 'for-kernelci'
    variants: *minimal_variants

  rppt:
    tree: rppt
    branch: 'for-kernelci'
    variants: *medium_variants

  rt-stable_v3.18-rt:
    tree: rt-stable
    branch: 'v3.18-rt'
    variants: *preempt_rt_variants

  rt-stable_v4.1-rt:
    tree: rt-stable
    branch: 'v4.1-rt'
    variants: *preempt_rt_variants

  rt-stable_v4.4-rt:
    tree: rt-stable
    branch: 'v4.4-rt'
    variants: *preempt_rt_variants

  rt-stable_v4.9-rt:
    tree: rt-stable
    branch: 'v4.9-rt'
    variants: *preempt_rt_variants

  rt-stable_v4.14-rt:
    tree: rt-stable
    branch: 'v4.14-rt'
    variants: *preempt_rt_variants

  rt-stable_v4.19-rt:
    tree: rt-stable
    branch: 'v4.19-rt'
    variants: *preempt_rt_variants

  rt-stable_v5.4-rt:
    tree: rt-stable
    branch: 'v5.4-rt'
    variants: *preempt_rt_variants

  rt-stable_v5.10-rt:
    tree: rt-stable
    branch: 'v5.10-rt'
    variants: *preempt_rt_variants

  rt-stable_v5.15-rt:
    tree: rt-stable
    branch: 'v5.15-rt'
    variants: *preempt_rt_variants

  samsung:
    tree: samsung
    branch: 'for-next'

  soc_fixes:
    tree: soc
    branch: 'arm/fixes'

  soc_for-next:
    tree: soc
    branch: 'for-next'

  tegra:
    tree: tegra
    branch: 'for-next'

  thermal:
    tree: thermal
    branch: 'testing'
    variants: *minimal_variants

  tip:
    tree: tip
    branch: 'master'

  ulfh:
    tree: ulfh
    branch: 'next'

  vireshk:
    tree: vireshk
    branch: 'for-kernelci'
    variants: *minimal_variants
