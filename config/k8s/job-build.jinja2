apiVersion: batch/v1
kind: Job
metadata:
  name: {{ job_name }}
spec:
  completions: 1
  template:
    spec:
      restartPolicy: OnFailure

      # in-memory tmpfs
      volumes:
      - name: scratch-volume
        emptyDir: { medium: "Memory" }

      # only run on preemptible nods
      #nodeSelector:
      #  cloud.google.com/gke-preemptible: "true"

      # tolerate Azure spot instances
      tolerations:
      - key: "kubernetes.azure.com/scalesetpriority"
        operator: "Equal"
        value: "spot"
        effect: "NoSchedule"

      initContainers:
      - name: kernelci-core-setup
        image: {{ "FIXME" | env_override('DOCKER_BASE') }}{{ "FIXME" | env_override('DOCKER_IMAGE') }}

        volumeMounts:
        - mountPath: "/scratch"
          name: scratch-volume

        command: ["/bin/bash", "-x", "-c"]
        args: ["mkdir -p /tmp/kci && cd /scratch && git clone --depth=1 --branch ${KCI_CORE_BRANCH} ${KCI_CORE_URL}"]

        env:
        - name: KCI_CORE_URL
          value: "{{ "FIXME" | env_override('KCI_CORE_URL') }}"
        - name: KCI_CORE_BRANCH
          value: "{{ "FIXME" | env_override('KCI_CORE_BRANCH') }}"

      containers:
      - name: kci-build
        image: {{ "FIXME" | env_override('DOCKER_BASE') }}{{ "FIXME" | env_override('DOCKER_IMAGE') }}

        volumeMounts:
        - mountPath: "/scratch"
          name: scratch-volume

        # Run as root so the build artifacts have root uid:gid set on them
        securityContext:
          runAsUser: 0
          runAsGroup: 0

        command: ["/bin/bash", "-x", "-c"]
        args: ["\
echo nproc=$(nproc); df; free; whoami; \
export KDIR=/tmp/kci/linux && export CCACHE_DISABLE=true && \
cd /scratch/kernelci-core &&  \
\
set +x; \
[ -n \"${PARALLEL_JOPT}\" ] && jopt=\"j: ${PARALLEL_JOPT}\n\" || jopt=; \
echo -e \"\
[DEFAULT]\n\
kdir: ${KDIR}\n\
verbose: true\n\
db_config: ${KCI_DB_CONFIG}\n\
\n\
[db:${KCI_DB_CONFIG}]\n\
db_token: ${KCI_API_TOKEN}\n\
api: ${KCI_API_URL}\n\
\n\
[kci_build]\n\
${jopt}\
build_env: ${BUILD_ENVIRONMENT}\n\
arch: ${ARCH}\n\
output: ${KDIR}/build\n\
install: true\n\
\n\
[kci_data]\n\
output: ${KDIR}/build\n\
\" > kernelci.conf; \
set -x; \
\
./kci_build pull_tarball \
  --url ${SRC_TARBALL} \
  --retries 3 \
  --delete; \
\
./kci_build generate_fragments \
  --build-config=${BUILD_CONFIG}; \
\
./kci_build init_bmeta \
  --build-config=${BUILD_CONFIG} \
  --commit=${COMMIT_ID} \
  --describe=${GIT_DESCRIBE} \
  --describe-verbose=${GIT_DESCRIBE_VERBOSE}; \
\
./kci_build make_config --defconfig=${DEFCONFIG} && \
./kci_build make_kernel && \
./kci_build make_modules && \
./kci_build make_dtbs && \
./kci_build make_kselftest; \
export KERNEL_BUILD_RESULT=$?;
\
set +x; \
echo Build result: ${KERNEL_BUILD_RESULT}; \
echo; echo bmeta.json; cat ${KDIR}/build/bmeta.json; \
echo; echo _install_; ls -l ${KDIR}/build/_install_; \
\
./kci_build push_kernel; \
./kci_data submit_build; \
\
exit 0; \
"]

        env:
        - name: ARCH
          value: "{{ "FIXME" | env_override('ARCH') }}"
        - name: BUILD_ENVIRONMENT
          value: "{{ "FIXME" | env_override('BUILD_ENVIRONMENT') }}"
        - name: DEFCONFIG
          value: "{{ "FIXME" | env_override('DEFCONFIG') }}"
        - name: SRC_TARBALL
          value: "{{ "FIXME" | env_override('SRC_TARBALL') }}"
        - name: GIT_DESCRIBE
          value: "{{ "FIXME" | env_override('GIT_DESCRIBE') }}"
        - name: GIT_DESCRIBE_VERBOSE
          value: "{{ "FIXME" | env_override('GIT_DESCRIBE_VERBOSE') }}"
        - name: COMMIT_ID
          value: "{{ "FIXME" | env_override('COMMIT_ID') }}"
        - name: BUILD_CONFIG
          value: "{{ "FIXME" | env_override('BUILD_CONFIG') }}"
        - name: KCI_DB_CONFIG
          value: "{{ "FIXME" | env_override('KCI_DB_CONFIG') }}"
        - name: KCI_API_URL
          value: "{{ "FIXME" | env_override('KCI_API_URL') }}"
        - name: KCI_API_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ "kci-api-token" | env_override('KCI_API_TOKEN_ID') }}
              key: token

        # optional env
        - name: PARALLEL_JOPT
          value: "{{ "" | env_override('PARALLEL_JOPT') }}"

        resources:
          limits:
            cpu: {{ cpu_limit }}
          requests:
            cpu: {{ cpu_request }}
            memory: {{ mem_request }}
