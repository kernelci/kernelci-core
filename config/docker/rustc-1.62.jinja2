{% extends 'clang-15.jinja2' %}

{% block packages %}
{{ super() }}

ARG RUST_VER=1.62.0
ARG BINDGEN_VER=0.56.0

ARG RUST_TRIPLE=rust-${RUST_VER}-x86_64-unknown-linux-gnu

ENV CARGO_HOME=/home/kernelci/.cargo
ENV PATH=/usr/${RUST_TRIPLE}/bin:${CARGO_HOME}/bin:${PATH}

ARG SHA256SUM=4172d3cb316498025410bdf33a4d0f756f5e77fbaee1fb042ccdef78239be1db

# fetch, verify the toolchain
RUN wget https://static.rust-lang.org/dist/${RUST_TRIPLE}.tar.gz && \
    echo "${SHA256SUM} ${RUST_TRIPLE}.tar.gz" | sha256sum --check --quiet

# install & cleanup tmp files
RUN tar -xf ${RUST_TRIPLE}.tar.gz  -C /tmp/ && \
    /tmp/${RUST_TRIPLE}/install.sh --prefix=/usr/${RUST_TRIPLE} \
        --components=rustc,cargo,rust-std-x86_64-unknown-linux-gnu && \
    rm -rf /tmp/${RUST_TRIPLE} && \
    rm /${RUST_TRIPLE}*

# This image is based on clang-*jinja2 which only has clang installed but rustc
# defaults to linker "cc" which calls the non-existing GNU stack (gcc, libgcc).
# So we point cargo/rustc to use the LLVM stack via the clang linker entrypoint.
RUN mkdir -p ${CARGO_HOME} && \
    printf '[build]\nrustflags = ["-C", "linker=clang"]' > ${CARGO_HOME}/config.toml

RUN git clone --recurse-submodules --branch $RUST_VER \
        https://github.com/rust-lang/rust \
        $(rustc --print sysroot)/lib/rustlib/src/rust

RUN cargo install --locked --version ${BINDGEN_VER} bindgen

{%- endblock %}
