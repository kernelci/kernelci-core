{%- extends 'base/debian.jinja2' -%}

{% block multistage %}
# Build custom kmod package with compression enabled

# SSL / HTTPS support
RUN apt-get update && apt-get install --no-install-recommends -y \
    apt-transport-https \
    ca-certificates

# Add retries
RUN echo 'Acquire::Retries "5";' > /etc/apt/apt.conf.d/80-retries

# Prepare environment for building packages
#RUN sed -i -- 's/# deb-src/deb-src/g' /etc/apt/sources.list
RUN echo "deb-src http://deb.debian.org/debian bookworm main non-free contrib" \
    >> /etc/apt/sources.list
RUN echo "deb-src http://deb.debian.org/debian-security/ bookworm-security main contrib non-free" \
    >> /etc/apt/sources.list
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    cdbs \
    devscripts \
    equivs \
    fakeroot

# Prepare kmod sources, patch, install dependencies, build
RUN mkdir -p /root/patches
# Workaround for apt-get source _apt permissions
RUN chmod 777 /root/patches
WORKDIR /root/patches

# Get patch to enable compression
#ADD https://raw.githubusercontent.com/kernelci/kernelci-core/\
#kernelci.org/\
#config/docker/data/kmod_kci_bookworm.patch \
#.
ADD https://raw.githubusercontent.com/kernelci/kernelci-core/main/config/docker/data/kmod_kci_bookworm.patch \
.

RUN apt-get source kmod
WORKDIR /root/patches/kmod-30+20221128
RUN patch -p1 < ../kmod_kci_bookworm.patch
RUN mk-build-deps -ir \
    -t "apt-get -o Debug::pkgProblemResolver=yes -y --no-install-recommends"
RUN debuild -b -uc -us

FROM mirror.gcr.io/debian:bookworm
MAINTAINER "KernelCI TSC" <kernelci-tsc@groups.io>
ENV DEBIAN_FRONTEND=noninteractive
{%- endblock %}

{%- block packages %}
# Fetch kmod deb package from previous stage
COPY --from=0 /root/patches/*.deb /root/
RUN dpkg -i /root/*.deb && rm /root/*.deb

# Host build tools
RUN apt-get update && apt-get install --no-install-recommends -y \
    bash \
    bc \
    bison \
    bsdmainutils \
    ccache \
    cmake \
    cpio \
    dwarves \
    elfutils \
    flex \
    g++ \
    gawk \
    gcc \
    git \
    kmod \
    libssl-dev \
    libelf-dev \
    libdw-dev \
    libbpf-dev \
    lz4 \
    lzop \
    make \
    python3 \
    python3-dev \
    python3-pip \
    pkg-config \
    rdfind \
    rsync \
    swig \
    tar \
    u-boot-tools \
    uuid-dev \
    wget \
    xz-utils

# Install dtschema for dtbs_check
RUN pip3 install dtschema --break-system-packages

# Install gcovr from pip as bookworm's version is too old
# FIXME: revert to installing with apt after switching to trixie
RUN pip3 install gcovr --break-system-packages

# Download and build pahole v1.28
RUN wget -c https://storage.kernelci.org/pahole-1.29.tar.gz && \
    tar -xzf pahole-1.29.tar.gz && \
    cd pahole-1.29 && \
    mkdir build && cd build && \
    cmake .. -DLIBBPF_EMBEDDED=OFF && \
    make && \
    make install && \
    echo "/usr/local/lib" > /etc/ld.so.conf.d/dwarves.conf && \
    ldconfig && \
    cd ../.. && rm -rf pahole-1.29

{% endblock %}
