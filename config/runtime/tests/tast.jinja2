{%- include 'chromeos/base.jinja2' %}

- test:
    namespace: chromeos
    timeout:
      minutes: 30
    docker:
      image: kernelci/cros-tast
      wait:
        device: true
    results:
      location: /home/cros/lava
    definitions:
    - from: inline
      name: tast
      path: inline/cros-tast.yaml
      repository:
        metadata:
          format: Lava-Test Test Definition 1.0
          name: cros-tast
        run:
          steps:
            - cd /home/cros
            - >-
              lava-test-case tast-tarball --shell
              curl -s '{{ platform_config.params.tast_tarball }}'
              \| tar xzvf -
              && cp remote_test_runner /usr/bin/remote_test_runner
              && mkdir -p /usr/libexec/tast/bundles/remote/
              && cp cros /usr/libexec/tast/bundles/remote/
            - for i in $(seq 1 60); do ping -c 1 -w 1 $(lava-target-ip) && break || sleep 1; done
            - ping -c 1 -w 1 $(lava-target-ip) || lava-test-raise "cros-device-unreachable"
            - >-
              ./ssh_retry.sh
              -o StrictHostKeyChecking=no
              -o UserKnownHostsFile=/dev/null
              -i /home/cros/.ssh/id_rsa
              root@$(lava-target-ip)
              cat /etc/os-release > /tmp/osrel.tmp
            - cat /tmp/osrel.tmp
            - >-
              lava-test-case os-release --result pass
              --measurement $(sed -e '/VERSION_ID/!d' -e 's/.*=//' /tmp/osrel.tmp)
{%- if excluded_tests %}
            - echo "# Disabled tests for KernelCI" > /tmp/excluded-tast-tests
{%- for test in excluded_tests %}
            - echo "-{{ test }}" >> /tmp/excluded-tast-tests
{%- endfor %}
{%- endif %}
            - >-
              ./tast_parser.py --run
{%- for test in tests %}
              {{ test }}
{%- endfor %}
            - >-
              ./ssh_retry.sh
              -o StrictHostKeyChecking=no
              -o UserKnownHostsFile=/dev/null
              -i /home/cros/.ssh/id_rsa
              root@$(lava-target-ip)
              sync
            # Wait for DUT to shut down, or keep going if unreachable (e.g. crashed)
            - >-
              ./ssh_retry.sh
              -o StrictHostKeyChecking=no
              -o UserKnownHostsFile=/dev/null
              -i /home/cros/.ssh/id_rsa
              root@$(lava-target-ip)
              poweroff && sleep 30 || true
            - ./tast_parser.py --results
