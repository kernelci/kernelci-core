{%- include 'chromeos/base.jinja2' %}

- test:
    namespace: chromeos
    timeout:
      minutes: {{ test_timeout|default('30') }}
    docker:
      image: kernelci/cros-tast
      wait:
        device: true
    results:
      location: /home/cros/lava
    definitions:
    - from: inline
      name: tast
      path: inline/cros-tast.yaml
      repository:
        metadata:
          format: Lava-Test Test Definition 1.0
          name: cros-tast
        run:
          steps:
            - cd /home/cros
{%- if excluded_tests %}
            - echo "# Disabled tests for KernelCI" > /tmp/excluded-tast-tests
{%- for test in excluded_tests %}
            - echo "-{{ test }}" >> /tmp/excluded-tast-tests
{%- endfor %}
{%- endif %}
            - lava-test-set start setup
            - >-
              lava-test-case tast-tarball --shell
              curl -s '{{ platform_config.params.tast_tarball }}'
              \| tar xzf -
              && cp remote_test_runner /usr/bin/remote_test_runner
              && mkdir -p /usr/libexec/tast/bundles/remote/
              && cp cros /usr/libexec/tast/bundles/remote/
              && mkdir -p /usr/share/tast/data
              && cp -r go.chromium.org /usr/share/tast/data
            - for i in $(seq 1 60); do ping -c 1 -w 1 $(lava-target-ip) && break || sleep 1; done
            - ping -c 1 -w 1 $(lava-target-ip) || lava-test-raise "cros-device-unreachable"
            - >-
              /home/cros/ssh_retry.sh
              -o StrictHostKeyChecking=no
              -o UserKnownHostsFile=/dev/null
              -i /home/cros/.ssh/id_rsa
              root@$(lava-target-ip)
              cat /etc/os-release > /tmp/osrel.tmp
            - cat /tmp/osrel.tmp
            - >-
              lava-test-case os-release --result pass
              --measurement $(sed -e '/VERSION_ID/!d' -e 's/.*=//' /tmp/osrel.tmp)
            - sudo -u cros --login ssh-keyscan -t rsa $(lava-target-ip) > ~/.ssh/known_hosts
{%- if 'v4l2' in tests|join(' ') %}
            - sudo -u cros --login scp test_vectors.tar.gz root@$(lava-target-ip):/usr || true
            - sudo -u cros --login ssh root@$(lava-target-ip) tar -xzf /usr/test_vectors.tar.gz -C
              /usr/local/share/tast/data/go.chromium.org/tast-tests/cros/local/bundles/cros/video/data/ || true
{%- endif %}
{%- if 'vp9' in tests|join(' ') %}
            - sudo -u cros --login scp test_vectors-vp9.tar.gz root@$(lava-target-ip):/usr || true
            - sudo -u cros --login ssh root@$(lava-target-ip) tar -xzf /usr/test_vectors-vp9.tar.gz -C
            /usr/local/share/tast/data/go.chromium.org/tast-tests/cros/local/bundles/cros/video/data/ || true
{%- endif %}
{% if "coverage" in node.data.config_full %}
            - scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null
              -i /home/cros/.ssh/id_rsa /home/cros/gcov_* root@$(lava-target-ip):/usr/local/bin || true
            - /home/cros/ssh_retry.sh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null
              -i /home/cros/.ssh/id_rsa root@$(lava-target-ip) /usr/local/bin/gcov_reset.sh || true
            - lava-test-case gcov-scripts --result pass
{% endif %}
            - lava-test-set stop setup
            - >-
              ./tast_parser.py --run
{%- for test in tests %}
              {{ test }}
{%- endfor %}
              || true
{% if "coverage" in node.data.config_full %}
            - UPLOAD_PATH="{{ node.name }}-{{ node.id }}"
            - UPLOAD_NAME="gcov.tar.gz"
            - STORAGE_BASE_URL="{{ storage_config.base_url.rstrip('/') }}"
            # Pack and retrieve GCOV artifacts
            - /home/cros/ssh_retry.sh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null
              -i /home/cros/.ssh/id_rsa root@$(lava-target-ip) /usr/local/bin/gcov_pack.sh
              "/tmp/${UPLOAD_NAME}" || true
            - scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null
              -i /home/cros/.ssh/id_rsa root@$(lava-target-ip):"/tmp/${UPLOAD_NAME}" . || true
            # Use set +x so we can don't echo secret tokens in the logs
            - set +x
            - . /lava-${LAVA_JOB_ID}/secrets
            - >-
              lava-test-case "artifact-upload:coverage_data:${STORAGE_BASE_URL}/${UPLOAD_PATH}/${UPLOAD_NAME}"
              --shell curl -X POST ${STORAGE_BASE_URL}/upload
              -H "Authorization: Bearer ${UPLOAD_TOKEN}"
              -F "file0=@${UPLOAD_NAME}"
              -F "path=${UPLOAD_PATH}"
              || true
            # Re-enable set -x for the final commands
            - set -x
{% endif %}
            # Wait for DUT to shut down, or keep going if unreachable (e.g. crashed)
            - >-
              /home/cros/ssh_retry.sh
              -o StrictHostKeyChecking=no
              -o UserKnownHostsFile=/dev/null
              -i /home/cros/.ssh/id_rsa
              root@$(lava-target-ip)
              poweroff && sleep 30 || true
            - ./tast_parser.py --results
{% if "coverage" in node.data.config_full %}
secrets:
  UPLOAD_TOKEN: {{ storage_config.name }}-token
{% endif %}
